#!/usr/bin/python
# -*- python -*-
# -*- coding: utf-8 -*-
# vim:filetype=python:
# Updates HTML docs and pushes them to GitHub repository.
# Syncs both the master and gh-pages branches.
# You need to have write access to the pcmsolver-doc repository on GitHub
# (c) Roberto Di Remigio  <roberto.d.remigio@uit.no>
# licensed under the GNU Lesser General Public License

import docopt
import os
import shutil
import subprocess
import time

from generate_docs import run_doxygen

options = """
Usage:
  ./update_gh-pages.py <project_dir>
  ./update_gh-pages.py (-h | --help)

Options:
  <project_dir>   Directory where the Doxyfile is located.
  -h --help       Show this screen.
"""

def git_command(*args):
    return subprocess.check_call(['git'] + list(args), shell=False)


try:
    arguments = docopt.docopt(options, argv=None)
except docopt.DocoptExit:
    sys.stderr.write('ERROR: bad input to %s\n' % sys.argv[0])
    sys.stderr.write(options)
    sys.exit(-1)

build  = arguments['<project_dir>']
# Get source directory
source = os.path.abspath(os.path.join(build, os.pardir))

now = time.strftime('%c')
commit_message = now + ' : update Doxygen generated html files.'

# Clone remote repository pcmsolver-doc
dest = build + '/doc/html'
if os.path.exists(dest):
    shutil.rmtree(dest)
git_command('clone', 'git@github.com:PCMSolver/pcmsolver-doc.git', dest)
print('HTML github repository cloned to {}'.format(dest))
os.chdir(dest)

# Check that we are on the master branch, if not switch to master
branch = subprocess.check_output(['git', 'rev-parse', '--symbolic-full-name', '--abbrev-ref', 'HEAD']).rstrip()
if (branch != 'master'):
    git_command('checkout', 'master')
# Update docs calling doxygen
doxyfile = build + '/Doxyfile'
run_doxygen(doxyfile)
print('HTML docs generated by Doxygen in {}'.format(build+'/doc/html'))

# Add new files and commit changes on master
git_command('add', '.')
git_command('commit', '-m', commit_message)
git_command('push', 'origin', 'master')
print('Add, commit and push to master')

# Now switch to gh-pages, merge and push
git_command('checkout', 'gh-pages')
git_command('merge', 'master')
git_command('push', 'origin', 'gh-pages')
print('Merge and push to gh-pages')

# Switch back to master
git_command('checkout', 'master')

# vim:et:ts=4:sw=4
